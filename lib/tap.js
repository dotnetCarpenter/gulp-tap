// Generated by CoffeeScript 1.8.0
var ES, baseStream;

ES = require('event-stream');

baseStream = require('stream');


/*
 * Taps into the pipeline and allows user to easily route data through
 * another stream or change content.
 */

module.exports = function(lambda) {
  var modifyFile, utils;
  utils = function(tapStream, file) {
    return {

      /*
       * Routes through another stream. The filter must not be
       * created. This will create the filter as needed and
       * cache when it can.
       *
       * @param filter {stream}
       * @param args {Array} Array containg arguments to apply to filter.
       *
       * @example
       *   t.through coffee, [{bare: true}]
       */
      through: function(filter, args) {
        var stream;
        stream = filter.apply(null, args);
        stream.on("error", function(err) {
          return tapStream.emit("error", err);
        });
        stream.write(file);
        stream.pipe(tapStream);
        return stream;
      }
    };
  };
  modifyFile = function(file) {
    var inst, obj;
    inst = {
      file: file
    };
    obj = lambda(inst.file, utils(this, inst.file), inst);
    if (obj instanceof baseStream) {
      return obj.on('end', (function(_this) {
        return function() {
          return _this.emit('data', inst.file);
        };
      })(this));
    } else {
      return this.emit('data', inst.file);
    }
  };
  return ES.through(modifyFile, function() {});
};

//# sourceMappingURL=tap.js.map
